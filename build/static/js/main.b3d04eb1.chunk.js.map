{"version":3,"sources":["components/Header.js","actions/actions.js","actions/types.js","components/RecipePreview.js","components/Recipes.js","components/Collection.js","components/RecipeForm.js","reducers/reducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","to","Component","fetchRecipies","dispatch","console","log","tickersList1","recipies","type","payload","saveRecipe","recipeObj","RecipePreview","this","props","name","description","durations","cookTime","prepTime","numberOfServings","labels","category","map","cat","displayName","connect","state","posts","recipe","Recipes","listOfRecipes","recipes","Collection","RecipeForm","onChange","e","setState","target","value","onEnter","key","document","getElementsByName","nameList","includes","push","prevState","onSubmit","preventDefault","title","serves","cuisisne","categories","cookingT","preparationT","tags","ingredients","steps","nutrition","images","alergens","match","params","fetchRecipe","oid","index","splice","ingr","text","instructions","step","cuisine","cuise","onClick","deleteFromList","onKeyDown","tag","ingredient","nutr","alergen","initialState","currency","baseCurrency","mutualFunds","combineReducers","action","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","App","fields","onUpdate","path","component","exact","render","Tips","Boolean","location","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b3d04eb1.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n//import '../Styles/Menu.css';\r\nclass Header extends Component \r\n{\r\n    constructor(){\r\n        super();\r\n        \r\n    }\r\n    componentWillMount(){\r\n        \r\n    }\r\n    \r\n    render(){\r\n        \r\n        return (\r\n            <div className=\"Header\">\r\n                <Link to='/' className=\"dropbtn\">Home</Link>\r\n                <Link to='/collection' className=\"dropbtn\">Collection</Link>\r\n                <Link to='/tips' className=\"dropbtn\">Tips</Link>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import {FETCH_RECIPIES,\r\n    FETCH_RECIPE,\r\n    FETCH_CATEGORIES} from './types';\r\nimport tickersList1 from '../assets/recepes.json';\r\n\r\n    export const fetchRecipies=()=>dispatch=>{\r\n        console.log(\"fetchRecipies\")\r\n        console.log(tickersList1.recipies);\r\n        dispatch({\r\n                    type: FETCH_RECIPIES,\r\n                    payload: tickersList1.recipies\r\n                  })\r\n        // fetch(\"https://api.spoonacular.com/recipes/search?query=cheese&number=2&apiKey=3262298f26124a46a17ff9ada1b84230\")\r\n        //     .then(res=>res.json()).then(post=>dispatch({\r\n        //         type: FETCH_RECIPIES,\r\n        //         payload: post\r\n        //       }));\r\n    };\r\n\r\n    export const fetchRecipe=()=>dispatch=>{\r\n        console.log(\"fetchRecipe\")\r\n        \r\n        dispatch({\r\n                    type: FETCH_RECIPE,\r\n                    payload: tickersList1.recipies[0]\r\n                  })\r\n        // fetch(\"https://api.spoonacular.com/recipes/search?query=cheese&number=2&apiKey=3262298f26124a46a17ff9ada1b84230\")\r\n        //     .then(res=>res.json()).then(post=>dispatch({\r\n        //         type: FETCH_RECIPIES,\r\n        //         payload: post\r\n        //       }));\r\n    };\r\n\r\n    export const saveRecipe=(recipeObj)=>dispatch=>{\r\n        console.log(\"saveRecipe\")\r\n        \r\n        console.log(recipeObj);\r\n        // fetch(\"https://api.spoonacular.com/recipes/search?query=cheese&number=2&apiKey=3262298f26124a46a17ff9ada1b84230\")\r\n        //     .then(res=>res.json()).then(post=>dispatch({\r\n        //         type: FETCH_RECIPIES,\r\n        //         payload: post\r\n        //       }));\r\n    };","export const FETCH_RECIPIES = 'FETCH_RECIPIES';\r\nexport const FETCH_RECIPE = 'FETCH_RECIPE';\r\nexport const FETCH_CATEGORIES = 'FETCH_CATEGORIES';","import React,{Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { fetchRecipies } from '../actions/actions';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass RecipePreview extends Component{\r\n    \r\n    \r\nlistOfStockItems;\r\n    constructor(){\r\n        super();\r\n    }\r\n    componentDidMount() {\r\n        console.log(this.props);\r\n        \r\n    }\r\n    \r\n    render(){\r\n        \r\n        \r\n        return (\r\n            \r\n            <div className=\"recipePreview\">\r\n                <h2><Link to='/newRecipe/0' >{this.props.name}</Link></h2>\r\n                <p>{this.props.description}</p>\r\n                <div className=\"underline\">\r\n                    <div><i className=\"material-icons\">access_time</i> <span>Cooking time:</span> {this.props.durations.cookTime} + {this.props.durations.prepTime} min</div>\r\n                    <div><span>Number of servings:</span> {this.props.numberOfServings}</div>\r\n                    <hr/>\r\n                    Category: {this.props.labels.category.map(cat=><div className=\"categoryBox\">{cat.displayName}</div>)}\r\n                </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nRecipePreview.propTypes={\r\n    posts: PropTypes.array.isRequired\r\n}\r\nconst mapStateToProps = state=>({\r\n    posts: state.posts.recipe\r\n});\r\nexport default connect(mapStateToProps,{fetchRecipies})(RecipePreview);","import React,{Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { fetchRecipies } from '../actions/actions';\r\nimport RecipePreview from './RecipePreview';\r\n\r\nclass Recipes extends Component{\r\n    \r\n    \r\nlistOfRecipes;\r\n    constructor(){\r\n        super();\r\n    }\r\n    componentDidMount() {\r\n        console.log(this.props);\r\n        this.props.fetchRecipies();\r\n    }\r\n    \r\n    render(){\r\n        \r\n            console.log(this.props);\r\n            if(this.props.posts!=null)\r\n                this.listOfRecipes =this.props.posts.map(recipe=><RecipePreview {...recipe}/>);\r\n        return (\r\n            \r\n            <div className=\"stockItemWrapper\">\r\n                {this.listOfRecipes}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// Recipes.propTypes={\r\n//     posts: PropTypes.array.isRequired\r\n// }\r\nconst mapStateToProps = state=>({\r\n    posts: state.posts.recipes\r\n});\r\nexport default connect(mapStateToProps,{fetchRecipies})(Recipes);","import React,{Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Recipes from './Recipes';\r\nclass Collection extends Component \r\n{\r\n    constructor(){\r\n        super();\r\n        \r\n    }\r\n    componentWillMount(){\r\n        \r\n    }\r\n    \r\n    render(){\r\n        \r\n        return (\r\n            <div className=\"Collection\">\r\n                <Recipes/>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Collection;","import React,{Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { fetchRecipe } from '../actions/actions';\r\n\r\n\r\nclass RecipeForm extends Component{\r\n    \r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            title : \"\",\r\n            description : \"\",\r\n            serves : 0,\r\n            cuisisne  : \"\",\r\n            categories : [],\r\n            cookingT : 0,\r\n            preparationT : 0,\r\n            tags : [],\r\n            ingredients : [],\r\n            steps : [],\r\n            nutrition : [],\r\n            images : [],\r\n            alergens : [],\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        \r\n        if(this.props.match !=null && \"oid\" in this.props.match.params)\r\n        {\r\n            this.props.fetchRecipe([this.props.match.params.oid]);\r\n            \r\n            \r\n        }\r\n    }\r\n    onChange=e=>{\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        })\r\n        console.log(this.state)\r\n    }\r\n    onEnter=e=>{\r\n        let name=e.target.name\r\n        let value = e.target.value\r\n        if (e.key === 'Enter') {\r\n            document.getElementsByName(name)[0].value=\"\";\r\n            let nameList=this.state[name];\r\n            if(!this.state[name].includes(value))\r\n            {\r\n                nameList.push(value);\r\n                this.setState((prevState) => ({\r\n                    [name]:nameList\r\n                }))\r\n            }\r\n        }\r\n    }\r\n    onSubmit=e=>{\r\n        if (e.key === 'Enter') \r\n        return ;\r\n        e.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n    }\r\n    deleteFromList(index,name){\r\n        \r\n\r\n        this.state[name].splice(index,1); \r\n        this.setState({\r\n            [name]:this.state[name]\r\n        })\r\n            \r\n    }\r\n\r\n\r\n    render(){\r\n        console.log(this.props)\r\n        if(this.props.posts!=null)\r\n        {\r\n            \r\n            \r\n            // tags : [],\r\n            \r\n            // nutrition : [],\r\n            // images : [],\r\n            // alergens \r\n\r\n            this.state={\r\n                title : this.props.posts.name,\r\n                description : this.props.posts.description,\r\n                ingredients : this.props.posts.ingredients.map(ingr=>ingr.text),\r\n                serves : this.props.posts.numberOfServings,\r\n                cookingT : this.props.posts.durations.cookTime,\r\n                steps:this.props.posts.instructions.steps.map(step=>step.text),\r\n                categories : this.props.posts.labels.category.map(cat=>cat.displayName),\r\n                cuisisne:this.props.posts.labels.cuisine.map(cuise=>cuise.displayName)\r\n            };\r\n            \r\n        }\r\n        return (\r\n            \r\n            <div className=\"recipeWrapper\">\r\n                \r\n                    <div className=\"item-title\">Title: <input type=\"text\" name=\"title\" onChange={e=>this.onChange(e)} value={this.state.title}/></div>\r\n                    <div className=\"item-description\">Description: <textarea name=\"description\" onChange={e=>this.onChange(e)} value={this.state.description}></textarea></div>\r\n                    <div className=\"item-serves\">Serves: <input type=\"number\" name=\"serves\" onChange={e=>this.onChange(e)} value={this.state.serves}/></div>\r\n                    <div className=\"item-cuisine\">Cuisine: <input type=\"text\" name=\"cuisisne\" onChange={e=>this.onChange(e)} value={this.state.cuisisne}/></div>\r\n\r\n\r\n                    <div className=\"item-categories\">Categories:<br/>\r\n                        <div className=\"tagsArea\">\r\n                            {(this.state!=null && this.state.categories!=null)?this.state.categories.map((cat,index)=>\r\n                                    <div className=\"tagWrapper\">{cat} \r\n                                        <span className=\"tagDelete\" onClick={()=>this.deleteFromList(index,\"categories\")}>\r\n                                            <i className=\"material-icons tag-clear\">clear</i>\r\n                                        </span>\r\n                                </div>):\"\"}\r\n                            <input type=\"text\" className=\"transparent\" name=\"categories\" onKeyDown={this.onEnter}/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"item-cookingT\">Cooks in: <input type=\"number\" name=\"cookingT\" onChange={e=>this.onChange(e)} value={this.state.cookingT}/></div>\r\n                    <div className=\"item-preparationT\">Preparation time: <input type=\"number\" name=\"preparationT\" onChange={e=>this.onChange(e)} value={this.state.preparationT}/></div>\r\n\r\n\r\n                    <div className=\"item-tags\">Tags: <br/>\r\n                        <div className=\"tagsArea\">\r\n                            {(this.state!=null && this.state.tags!=null)?this.state.tags.map((tag,index)=>\r\n                                <div className=\"tagWrapper\">{tag} \r\n                                    <span className=\"tagDelete\" onClick={()=>this.deleteFromList(index,\"tags\")}>\r\n                                        <i className=\"material-icons tag-clear\">clear</i>\r\n                                    </span>\r\n                                </div>):\"\"}\r\n                            <input type=\"text\" className=\"transparent\" name=\"tags\" onKeyDown={this.onEnter}/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    \r\n                    <div className=\"item-ingredients\">Ingredients: \r\n                            <ul className=\"stashedList\">\r\n                                {(this.state!=null && this.state.ingredients!=null)?this.state.ingredients.map((ingredient,index)=>\r\n                                    <li className=\"tagWrapper\">{ingredient} \r\n                                        <span className=\"tagDelete\" onClick={()=>this.deleteFromList(index,\"ingredients\")}>\r\n                                            <i className=\"material-icons tag-clear\">clear</i>\r\n                                        </span>\r\n                                    </li>):\"\"}\r\n                            </ul>\r\n                            <br/>   \r\n                        <input type=\"text\" name=\"ingredients\" onKeyDown={this.onEnter}/>\r\n                    </div>\r\n\r\n                        \r\n                    <div className=\"item-steps\">Steps: \r\n                        <ul className=\"stashedList\">\r\n                            {(this.state!=null && this.state.steps!=null)?this.state.steps.map((step,index)=>\r\n                                <li className=\"tagWrapper\">[{index+1}] {step} \r\n                                    <span className=\"tagDelete\" onClick={()=>this.deleteFromList(index,\"steps\")}>\r\n                                        <i className=\"material-icons tag-clear\">clear</i>\r\n                                    </span>\r\n                                </li>):\"\"}\r\n                        </ul>\r\n                            <br/>\r\n                        <input type=\"text\" name=\"steps\" onKeyDown={this.onEnter}/>\r\n                    </div>\r\n\r\n                    \r\n                    <div className=\"item-nutrition\">Nutrition: \r\n                        {(this.state!=null && this.state.nutrition!=null)?this.state.nutrition.map((nutr,index)=>\r\n                            <div className=\"tagWrapper\">{nutr} \r\n                                <span className=\"tagDelete\" onClick={()=>this.deleteFromList(index,\"nutrition\")}>\r\n                                    <i className=\"material-icons tag-clear\">clear</i>\r\n                                </span>\r\n                            </div>):\"\"}\r\n                        <input type=\"text\" className=\"transparent\" name=\"nutrition\" onKeyDown={this.onEnter}/>\r\n                    </div>\r\n\r\n                    <div className=\"item-images\">Image url: <input type=\"text\" name=\"images\" onChange={e=>this.onChange(e)}/></div>\r\n\r\n                        \r\n                    <div className=\"item-alergens\">Alergens: <br/>\r\n                        <div className=\"tagsArea\">\r\n                            {(this.state!=null && this.state.alergens!=null)?this.state.alergens.map((alergen,index)=>\r\n                                <div className=\"tagWrapper\">{alergen} \r\n                                    <span className=\"tagDelete\" onClick={()=>this.deleteFromList(index,\"alergens\")}>\r\n                                        <i className=\"material-icons tag-clear\">clear</i>\r\n                                    </span>\r\n                                </div>):\"\"}\r\n                            <input type=\"text\" className=\"transparent\" name=\"alergens\" onKeyDown={this.onEnter}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"item-submit\">\r\n                        <span className=\"btn \" onClick={e=>this.onSubmit(e)}>Submit</span>\r\n                    </div>\r\n                    \r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nRecipeForm.propTypes={\r\n    posts: PropTypes.array.isRequired\r\n}\r\nconst mapStateToProps = state=>({\r\n    posts: state.posts.recipe\r\n});\r\nexport default connect(mapStateToProps,{fetchRecipe})(RecipeForm);","import {FETCH_RECIPIES,FETCH_RECIPE,FETCH_CATEGORIES} from '../actions/types';\r\n\r\nconst initialState = {\r\n    currency: [],\r\n    baseCurrency: \"\",\r\n    mutualFunds:[]\r\n  };\r\n\r\nexport default function(state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n        case FETCH_RECIPIES:\r\n        //console.log(action);\r\n        return {\r\n            ...state,\r\n            recipes: action.payload\r\n        };\r\n\r\n        case FETCH_RECIPE:\r\n        console.log(action);\r\n        return {\r\n            ...state,\r\n            recipe: action.payload\r\n        };\r\n       \r\n\r\n           \r\n        default:\r\n        return state;\r\n    }\r\n    }","import { combineReducers } from 'redux';\r\nimport Reducer from './reducer';\r\n\r\nexport default combineReducers({\r\n  posts: Reducer\r\n});","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;","import React,{Component} from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport './App.css';\nimport Header from './components/Header';\nimport Collection from './components/Collection';\nimport Tips from './components/Tips';\nimport Recipes from './components/Recipes';\nimport RecipeForm from './components/RecipeForm';\nimport store from './store';\nimport { saveRecipe } from './actions/actions';\nimport { Provider } from 'react-redux';\n\nclass App extends Component {\n  onSubmit=fields=>{\n    console.log(\"Create \",fields);\n  }\n\n  onUpdate=fields=>{\n    console.log(\"Update \",fields);\n    saveRecipe(fields);\n  }\n  render(){\n  return (\n    <Router>\n      <Provider store={store}>\n        <div className=\"App\">\n          <Header/>\n        {/* <Link to={{pathname: `/newRecipe/1`, query: '/rateDetails'}} >Next recipe</Link>\n        <Link to={{pathname: `/recipe/1`, query: '/rateDetails'}} >Old recipe</Link> */}\n\n          <Switch>\n              {/* <Route exact path='/' component={Recipes}   /> */}\n              <Route path='/collection' component={Collection} />\n              <Route exact path='/recipes' component={Recipes}   />\n              \n              <Route path='/newRecipe/:oid'  render={(props)=><RecipeForm {...props} onSubmit={fields=>this.onUpdate(fields)} />} />\n              <Route path='/tips' component={Tips}   />\n              \n             \n              {/* <Router history={hashHistory} >\n                <Route path=\"/\" component={Body} />\n                <Route path='/stocks/:type/:symbol/:page/:limit'  component={StockList} />\n                <Route path='/stocks/:type/:symbol'  component={StockList} />\n              </Router> */}\n        </Switch>\n        </div>\n      </Provider>\n    </Router>\n  );\n}\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}